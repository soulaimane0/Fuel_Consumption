//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ALMATRANS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Db_ALMATRANSEntities : DbContext
    {
        public Db_ALMATRANSEntities()
            : base("name=Db_ALMATRANSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bon> Bons { get; set; }
        public virtual DbSet<Marque> Marques { get; set; }
        public virtual DbSet<Utilisateur> Utilisateurs { get; set; }
        public virtual DbSet<Véhicule> Véhicule { get; set; }
    
        public virtual ObjectResult<PS_AffBon_Result> PS_AffBon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_AffBon_Result>("PS_AffBon");
        }
    
        public virtual ObjectResult<PS_AffBonNum_Result> PS_AffBonNum(Nullable<int> numBon)
        {
            var numBonParameter = numBon.HasValue ?
                new ObjectParameter("NumBon", numBon) :
                new ObjectParameter("NumBon", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_AffBonNum_Result>("PS_AffBonNum", numBonParameter);
        }
    
        public virtual ObjectResult<PS_AffMarq_Result> PS_AffMarq()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_AffMarq_Result>("PS_AffMarq");
        }
    
        public virtual ObjectResult<PS_AffMarqID_Result> PS_AffMarqID(Nullable<int> idMarq)
        {
            var idMarqParameter = idMarq.HasValue ?
                new ObjectParameter("idMarq", idMarq) :
                new ObjectParameter("idMarq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_AffMarqID_Result>("PS_AffMarqID", idMarqParameter);
        }
    
        public virtual ObjectResult<PS_AffVcl_Result> PS_AffVcl()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_AffVcl_Result>("PS_AffVcl");
        }
    
        public virtual ObjectResult<PS_AffVclID_Result> PS_AffVclID(Nullable<int> idVcl)
        {
            var idVclParameter = idVcl.HasValue ?
                new ObjectParameter("idVcl", idVcl) :
                new ObjectParameter("idVcl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_AffVclID_Result>("PS_AffVclID", idVclParameter);
        }
    
        public virtual int PS_AjouterBon(Nullable<int> numBon, Nullable<System.DateTime> dateBon, string nomStat, Nullable<int> idVcl, string nom_chauf, Nullable<double> qte, Nullable<double> prixL, Nullable<double> prixToltal, string photo)
        {
            var numBonParameter = numBon.HasValue ?
                new ObjectParameter("NumBon", numBon) :
                new ObjectParameter("NumBon", typeof(int));
    
            var dateBonParameter = dateBon.HasValue ?
                new ObjectParameter("dateBon", dateBon) :
                new ObjectParameter("dateBon", typeof(System.DateTime));
    
            var nomStatParameter = nomStat != null ?
                new ObjectParameter("nomStat", nomStat) :
                new ObjectParameter("nomStat", typeof(string));
    
            var idVclParameter = idVcl.HasValue ?
                new ObjectParameter("idVcl", idVcl) :
                new ObjectParameter("idVcl", typeof(int));
    
            var nom_chaufParameter = nom_chauf != null ?
                new ObjectParameter("nom_chauf", nom_chauf) :
                new ObjectParameter("nom_chauf", typeof(string));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("Qte", qte) :
                new ObjectParameter("Qte", typeof(double));
    
            var prixLParameter = prixL.HasValue ?
                new ObjectParameter("prixL", prixL) :
                new ObjectParameter("prixL", typeof(double));
    
            var prixToltalParameter = prixToltal.HasValue ?
                new ObjectParameter("prixToltal", prixToltal) :
                new ObjectParameter("prixToltal", typeof(double));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_AjouterBon", numBonParameter, dateBonParameter, nomStatParameter, idVclParameter, nom_chaufParameter, qteParameter, prixLParameter, prixToltalParameter, photoParameter);
        }
    
        public virtual int PS_AjouterMarq(Nullable<int> idMarq, string nomMarq)
        {
            var idMarqParameter = idMarq.HasValue ?
                new ObjectParameter("idMarq", idMarq) :
                new ObjectParameter("idMarq", typeof(int));
    
            var nomMarqParameter = nomMarq != null ?
                new ObjectParameter("nomMarq", nomMarq) :
                new ObjectParameter("nomMarq", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_AjouterMarq", idMarqParameter, nomMarqParameter);
        }
    
        public virtual int PS_AjouterVcl(Nullable<int> idVcl, string imma, Nullable<int> idMarq, Nullable<System.DateTime> dateServ)
        {
            var idVclParameter = idVcl.HasValue ?
                new ObjectParameter("idVcl", idVcl) :
                new ObjectParameter("idVcl", typeof(int));
    
            var immaParameter = imma != null ?
                new ObjectParameter("imma", imma) :
                new ObjectParameter("imma", typeof(string));
    
            var idMarqParameter = idMarq.HasValue ?
                new ObjectParameter("idMarq", idMarq) :
                new ObjectParameter("idMarq", typeof(int));
    
            var dateServParameter = dateServ.HasValue ?
                new ObjectParameter("dateServ", dateServ) :
                new ObjectParameter("dateServ", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_AjouterVcl", idVclParameter, immaParameter, idMarqParameter, dateServParameter);
        }
    
        public virtual int PS_ModifierBon(Nullable<int> numBon, Nullable<System.DateTime> dateBon, string nomStat, Nullable<int> idVcl, string nom_chauf, Nullable<double> qte, Nullable<double> prixL, Nullable<double> prixToltal, string photo)
        {
            var numBonParameter = numBon.HasValue ?
                new ObjectParameter("NumBon", numBon) :
                new ObjectParameter("NumBon", typeof(int));
    
            var dateBonParameter = dateBon.HasValue ?
                new ObjectParameter("dateBon", dateBon) :
                new ObjectParameter("dateBon", typeof(System.DateTime));
    
            var nomStatParameter = nomStat != null ?
                new ObjectParameter("nomStat", nomStat) :
                new ObjectParameter("nomStat", typeof(string));
    
            var idVclParameter = idVcl.HasValue ?
                new ObjectParameter("idVcl", idVcl) :
                new ObjectParameter("idVcl", typeof(int));
    
            var nom_chaufParameter = nom_chauf != null ?
                new ObjectParameter("nom_chauf", nom_chauf) :
                new ObjectParameter("nom_chauf", typeof(string));
    
            var qteParameter = qte.HasValue ?
                new ObjectParameter("Qte", qte) :
                new ObjectParameter("Qte", typeof(double));
    
            var prixLParameter = prixL.HasValue ?
                new ObjectParameter("prixL", prixL) :
                new ObjectParameter("prixL", typeof(double));
    
            var prixToltalParameter = prixToltal.HasValue ?
                new ObjectParameter("prixToltal", prixToltal) :
                new ObjectParameter("prixToltal", typeof(double));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_ModifierBon", numBonParameter, dateBonParameter, nomStatParameter, idVclParameter, nom_chaufParameter, qteParameter, prixLParameter, prixToltalParameter, photoParameter);
        }
    
        public virtual int PS_ModifierMarq(Nullable<int> idMarq, string nomMarq)
        {
            var idMarqParameter = idMarq.HasValue ?
                new ObjectParameter("idMarq", idMarq) :
                new ObjectParameter("idMarq", typeof(int));
    
            var nomMarqParameter = nomMarq != null ?
                new ObjectParameter("nomMarq", nomMarq) :
                new ObjectParameter("nomMarq", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_ModifierMarq", idMarqParameter, nomMarqParameter);
        }
    
        public virtual int PS_ModifierVcl(Nullable<int> idVcl, string imma, Nullable<int> idMarq, Nullable<System.DateTime> dateServ)
        {
            var idVclParameter = idVcl.HasValue ?
                new ObjectParameter("idVcl", idVcl) :
                new ObjectParameter("idVcl", typeof(int));
    
            var immaParameter = imma != null ?
                new ObjectParameter("imma", imma) :
                new ObjectParameter("imma", typeof(string));
    
            var idMarqParameter = idMarq.HasValue ?
                new ObjectParameter("idMarq", idMarq) :
                new ObjectParameter("idMarq", typeof(int));
    
            var dateServParameter = dateServ.HasValue ?
                new ObjectParameter("dateServ", dateServ) :
                new ObjectParameter("dateServ", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_ModifierVcl", idVclParameter, immaParameter, idMarqParameter, dateServParameter);
        }
    
        public virtual int PS_SupprimerBon(Nullable<int> numBon)
        {
            var numBonParameter = numBon.HasValue ?
                new ObjectParameter("NumBon", numBon) :
                new ObjectParameter("NumBon", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_SupprimerBon", numBonParameter);
        }
    
        public virtual int PS_SupprimerMarq(Nullable<int> idMarq)
        {
            var idMarqParameter = idMarq.HasValue ?
                new ObjectParameter("idMarq", idMarq) :
                new ObjectParameter("idMarq", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_SupprimerMarq", idMarqParameter);
        }
    
        public virtual int PS_SupprimerVcl(Nullable<int> idVcl)
        {
            var idVclParameter = idVcl.HasValue ?
                new ObjectParameter("idVcl", idVcl) :
                new ObjectParameter("idVcl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_SupprimerVcl", idVclParameter);
        }
    
        public virtual int PS_Util(string nomUtil, string pass)
        {
            var nomUtilParameter = nomUtil != null ?
                new ObjectParameter("nomUtil", nomUtil) :
                new ObjectParameter("nomUtil", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PS_Util", nomUtilParameter, passParameter);
        }
    
        public virtual ObjectResult<PS_Utilisateur_Result> PS_Utilisateur(string nomUtil, string pass)
        {
            var nomUtilParameter = nomUtil != null ?
                new ObjectParameter("nomUtil", nomUtil) :
                new ObjectParameter("nomUtil", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_Utilisateur_Result>("PS_Utilisateur", nomUtilParameter, passParameter);
        }
    
        public virtual ObjectResult<PS_DgvStatis_Result> PS_DgvStatis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_DgvStatis_Result>("PS_DgvStatis");
        }
    
        public virtual ObjectResult<PS_DateStatis_Result> PS_DateStatis(string imma, Nullable<System.DateTime> dateD, Nullable<System.DateTime> dateF)
        {
            var immaParameter = imma != null ?
                new ObjectParameter("imma", imma) :
                new ObjectParameter("imma", typeof(string));
    
            var dateDParameter = dateD.HasValue ?
                new ObjectParameter("dateD", dateD) :
                new ObjectParameter("dateD", typeof(System.DateTime));
    
            var dateFParameter = dateF.HasValue ?
                new ObjectParameter("dateF", dateF) :
                new ObjectParameter("dateF", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_DateStatis_Result>("PS_DateStatis", immaParameter, dateDParameter, dateFParameter);
        }
    
        public virtual ObjectResult<PS_ImmStatis_Result> PS_ImmStatis(string imma)
        {
            var immaParameter = imma != null ?
                new ObjectParameter("imma", imma) :
                new ObjectParameter("imma", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PS_ImmStatis_Result>("PS_ImmStatis", immaParameter);
        }
    }
}
